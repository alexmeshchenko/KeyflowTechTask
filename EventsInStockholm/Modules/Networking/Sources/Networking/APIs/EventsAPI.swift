//
// EventsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class EventsAPI {
    /**
     Get Events by location
     
     - parameter long: (query) A floating-point numbers representing longitude (decimal degrees). 
     - parameter lat: (query) A floating-point numbers representing latitude (decimal degrees). 
     - parameter placeId: (query) A string from google to uniquely identify a city. It is strongly recommended to also provide long &amp; lat at the same time when using this param. 
     - parameter locationRadius: (query) The range of a circle with locationCoordinates as center and locationRadius as radius in kilometers and 200 KM will be used if not given. 
     - parameter pageNumber: (query) Page number, default first page if not given. 
     - parameter pageSize: (query) Page size, default 50 per page if not given. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEventsbylocation(long: Double, lat: Double, placeId: String, locationRadius: Double, pageNumber: Int, pageSize: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InlineResponse200?, _ error: Error?) -> Void)) {
        getEventsbylocationWithRequestBuilder(long: long, lat: lat, placeId: placeId, locationRadius: locationRadius, pageNumber: pageNumber, pageSize: pageSize).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Events by location
     - GET /v4/events
     - Return all events including recommendation and hot events.
     - parameter long: (query) A floating-point numbers representing longitude (decimal degrees). 
     - parameter lat: (query) A floating-point numbers representing latitude (decimal degrees). 
     - parameter placeId: (query) A string from google to uniquely identify a city. It is strongly recommended to also provide long &amp; lat at the same time when using this param. 
     - parameter locationRadius: (query) The range of a circle with locationCoordinates as center and locationRadius as radius in kilometers and 200 KM will be used if not given. 
     - parameter pageNumber: (query) Page number, default first page if not given. 
     - parameter pageSize: (query) Page size, default 50 per page if not given. 
     - returns: RequestBuilder<InlineResponse200> 
     */
    open class func getEventsbylocationWithRequestBuilder(long: Double, lat: Double, placeId: String, locationRadius: Double, pageNumber: Int, pageSize: Int) -> RequestBuilder<InlineResponse200> {
        let path = "/v4/events"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "long": long.encodeToJSON(),
            "lat": lat.encodeToJSON(),
            "placeId": placeId.encodeToJSON(),
            "locationRadius": locationRadius.encodeToJSON(),
            "pageNumber": pageNumber.encodeToJSON(),
            "pageSize": pageSize.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<InlineResponse200>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
